# Generated by Django 5.2 on 2025-07-29 05:36

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('clinic', '0014_alter_publicappointment_token_recurringschedule'),
    ]

    operations = [
        migrations.AlterField(
            model_name='publicappointment',
            name='token',
            field=models.CharField(default='6402B3E0E4', max_length=10, unique=True),
        ),
        migrations.CreateModel(
            name='EmergencyService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient_name', models.CharField(max_length=100)),
                ('patient_age', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(150)])),
                ('patient_gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('patient_mobile', models.CharField(max_length=15)),
                ('patient_address', models.TextField()),
                ('emergency_contact', models.CharField(blank=True, max_length=15)),
                ('patient_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_type', models.CharField(help_text='Type of emergency (e.g., Chest Pain, Accident, Fever)', max_length=100)),
                ('symptoms', models.TextField(help_text="Patient's symptoms and complaints")),
                ('priority', models.CharField(choices=[('critical', 'Critical'), ('urgent', 'Urgent'), ('stable', 'Stable')], default='stable', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('transferred', 'Transferred'), ('discharged', 'Discharged')], default='active', max_length=20)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, help_text='Systolic BP (mmHg)', null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, help_text='Diastolic BP (mmHg)', null=True)),
                ('heart_rate', models.IntegerField(blank=True, help_text='Heart rate (bpm)', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=1, help_text='Temperature (Â°C)', max_digits=4, null=True)),
                ('respiratory_rate', models.IntegerField(blank=True, help_text='Respiratory rate (breaths/min)', null=True)),
                ('oxygen_saturation', models.IntegerField(blank=True, help_text='Oxygen saturation (%)', null=True)),
                ('blood_sugar', models.DecimalField(blank=True, decimal_places=1, help_text='Blood sugar (mg/dL)', max_digits=5, null=True)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies')),
                ('current_medications', models.TextField(blank=True, help_text='Current medications')),
                ('medical_history', models.TextField(blank=True, help_text='Relevant medical history')),
                ('treatment_plan', models.TextField(blank=True, help_text='Treatment plan and medications given')),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('nurse_staff', models.CharField(blank=True, help_text='Nurse or staff member on duty', max_length=100)),
                ('arrival_time', models.DateTimeField(auto_now_add=True)),
                ('treatment_start_time', models.DateTimeField(blank=True, null=True)),
                ('completion_time', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attending_doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='clinic.doctor')),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='emergency_services', to='clinic.patient')),
            ],
            options={
                'ordering': ['-arrival_time'],
            },
        ),
    ]
